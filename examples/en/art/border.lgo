# Main Command: Go 5
# Border by Guy Walker
# www.cr31.co.uk/logoarts

to new
  # set default screen, pen and turtle 
  ResetAll SetScreenSize [400 400] HideTurtle 
  SetSC Black SetPC Green SetPS 1 PenUp 
end

to go :block
  New Make "Side 380/((4*:Block)-1)
  SetXY -190 190-5*:Side PenDown 
  SetPC Brown OutSquare :Side :Block
  PenUp Left 90 Back (4*:Side*:Block)-(6*:Side) 
  Right 90 Back 2*:Side PenDown
  SetPC Yellow InSquare :Side :Block-1
end

to init
  # global values for each sector
  GlobalMake "Angle 10 +Random 110
  GlobalMake "Rad1 10 +Random 170
  GlobalMake "Width 130 -:Angle
  GlobalMake "Rad2 :Rad1 +:Width
  If :Rad2 >180 [Make "Rad2 200 -:Width]
  # Make Hue random color except black or white
  Make "Hue [0 0 0]
  While [Or :Hue=[0 0 0] :Hue=[255 255 255] ] [Make "Hue RandRGB 3]
end

to sector :angle :rad1 :rad2
  # sector shape drawn from centre (tp)
  Make "Offset (:Rad1+:Rad2) /2     # global offset fill
  Arch :Angle :Rad1
  Arch :Angle :Rad2 Left :Angle/2
  Forward :Rad1 PenDown Forward (:Rad2-:Rad1)
  PenUp Back :Rad2 Right :Angle
  Forward :Rad1 PenDown Forward (:Rad2-:Rad1)
  PenUp Back :Rad2 Left :Angle/2     # return to centre
end

to randrgb :ord
  # return random RGB color
  Output (List Val :Ord Val :Ord Val :Ord)
end
to val :ord
  # return random value 0-255 in steps of 255/:Ord-1
  Output Int (Random :Ord)*(255/(:Ord-1))
end

to arch :angle :radius
  # symmetrical arc drawn relative to turtle heading
  Arc :Radius Heading-:Angle/2 Heading+:Angle/2
end

to light :hue
  # output rgb list midway between :hue and white
  Repeat 3 [
    Make "Hue ButFirst LPut Int (255+(First :Hue))/2 :Hue]
  Output :Hue
end

to dark :hue
  # output rgb list midway between :hue and black
  Repeat 3 [
    Make "Hue ButFirst LPut Int (First :Hue)/2 :Hue]
  Output :Hue
end

to jump :side
  # set turtle to random position & heading within square of size side
  SetXY (Random :Side)-:Side/2 (Random :Side)-:Side/2
  SetH Random 360
end

to wire1 :parity
  # ring (tp) 
  Arch 336 24
end

to wire2 :parity
  # right or left hand 'S' shape (tp) 
  Repeat 2 [
    Forward 18 Right :Parity*40
    Arch 280 18
    Right :Parity*140 Forward 18]
end

to wire3 :parity
  # right or left hand 'U' shape (tp) 
  Arch 180 14
  Left :Parity*90 Forward 14 Left :Parity*90
  PenDown Forward 30 PenUp
  Back 30 Left :Parity*90 Forward 28 Right :Parity*90
  PenDown Forward 36 PenUp
  Back 36 Right :Parity*90 Forward 14 Right :Parity*90
end

to wire4 :parity
  # right or left hand eyelet (tp) 
  Left :Parity*30 Arch 60 12 Right :Parity*30
  Forward 24 Right :Parity*30 Arch 300 12
  Back 22 PenDown Back 30 PenUp 
  Forward 52 Left :Parity*30 Back 24
end

to probe
  Make "Centre RanPoint
  Make "A "OK Make "Radius 0
  Repeat 40 [
    If :A = "Abort [Stop]
    Make "Num :Radius + 24
    Make "Angle 360/ :Num
    Repeat :Num [
      SetPos :Centre Right :Angle
      Forward :Radius 
        #SetPC Green PenDown Forward 1 PenUp
      If Test > 64 [Make "A "Abort Stop] ]
    Make "Radius :Radius + 1]
  If :Radius > 6 [SetPos :Centre Blob :Radius-2]
end

to blob :radius
  SetPC [51 51 51] Circle :Radius
  SetPC Blue Fill
  SetH 315 Forward :Radius/2
  SetPC Cyan SetPW :Radius/3
  Dot Pos SetPW 1
end

to ranpoint
  Output List (Random 390)-195 (Random 390)-195
end

to test
  Output Item 3 FindColor Pos
end

to square :side
  # square (side x side) drawn from centre (tx)
  LocalMake "Half :Side/2 
  PenUp Back :Half Right 90 Back :Half
  PenDown Repeat 4 [ 
    Forward :Side Left 90] 
  PenUp Forward :Half Left 90 Forward :Half 
end

to hook :side
  Repeat 2 [Forward :Side Right 90] 
  Forward 3*:Side Right 90
end

to edge :side
  Repeat 2 [Hook :Side]
end

to incorner :side
  Hook :Side
end

to join :side
  Repeat 2 [Forward 3*:Side Right 90]
end

to insquare :side :block
  If :Block<2 [Stop] 
  Repeat 4 [
    Repeat :Block-2 [
      Edge :Side Join :Side] 
    InCorner :Side Join :Side]
end

to outcorner :side
  Repeat 3 [Hook :Side]
end

to outsquare :side :block
  If :Block<2 [Stop] 
  Repeat 4 [
    Repeat :Block-2 [
      Edge :Side Join :Side ] 
    OutCorner :Side Join :Side]
end
